name: Generate
on: workflow_dispatch

jobs:
    fetch_golang:
        name: Fetch Golang git repo
        runs-on: ubuntu-latest
        outputs:
            go_versions: ${{steps.get_versions.outputs.go_versions}}
            key: ${{ steps.get_date.outputs.latest_version }}
        steps:
            - id: get_date
              run: printf 'latest_version=%s\n' $(./golang_latest.version.sh) >> "$GITHUB_OUTPUT"

            - id: cache_golang
              uses: actions/cache@v3
              with:
                  path: go
                  key: ${{ steps.get_date.outputs.latest_version }}

            - name: Fetch Golang
              if: steps.cache_golang.outputs.cache-hit != 'true'
              run: git clone --depth 1 https://github.com/golang/go

            - id: get_versions
              run: printf 'go_versions=%s\n' $(git -C go tag | grep -vE '(weekly|release|beta|rc)' | sort -V | grep -A 999 go1.14 | jq -Rsc 'split("\n") | .[:-1]') >> "$GITHUB_OUTPUT"

    build:
        name: Build data files
        runs-on: ubuntu-latest
        needs: fetch_golang
        strategy:
            matrix:
                go_version: ${{ fromJson(needs.fetch_golang.outputs.go_versions) }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/cache@v3
              with:
                path: go
                key: ${{ needs.fetch_golang.outputs.key }}

            - run: sudo sh -c 'apt update && apt install golang-go'
            - run: env go_dir=go tag=${{ matrix.go_version }} ./gen.sh

            - uses: actions/upload-artifact@v3
              with:
                name: ${{ matrix.go_version }}.json
                path: results/${{ matrix.go_version }}.json
                retention-days: 1

    dedup:
        name: Deduplicate data files
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v3
            - run: sudo sh -c 'apt update && apt install python3'
            - uses: dawidd6/action-download-artifact@v2.27.0
              with:
                name: '.*.json'
                path: results/
            - run: ./dedup.py
            - uses: actions/upload-artifact@v3
              with:
                name: deduped
                path: artifacts/
